events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # 로그 설정
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    # gzip 압축
    gzip on;
    gzip_types text/plain application/json application/javascript text/css;
    
    # SSL 최적화 설정
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # 업스트림 설정
    upstream frontend {
        server frontend:3000;
    }
    
    upstream backend {
        server backend:8080;
    }
    
    upstream aiserver {
        server aiserver:8000;
    }
    
    # HTTP to HTTPS 리다이렉트
    server {
        listen 80;
        server_name behindy.me;
        
        # Let's Encrypt 경로는 유지
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        # 나머지는 HTTPS로 리다이렉트
        location / {
            return 301 https://$server_name$request_uri;
        }
    }
    
    # HTTPS 메인 서버
    server {
        listen 443 ssl http2;
        server_name behindy.me;
        
        # SSL 인증서 설정
        ssl_certificate /etc/letsencrypt/live/behindy.me/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/behindy.me/privkey.pem;
        
        # 보안 헤더
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        
        # 타임아웃 설정
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # 프론트엔드
        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket 지원
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        
        # 🔥 백엔드 API - 개선된 HTTPS CORS 설정
        location /api/ {
            # OPTIONS 프리플라이트 처리
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "https://behindy.me" always;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH" always;
                add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, Accept, Origin, X-CSRF-Token" always;
                add_header Access-Control-Allow-Credentials "true" always;
                add_header Access-Control-Max-Age "86400" always;
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }
            
            proxy_pass http://backend/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 모든 응답에 CORS 헤더 추가
            add_header Access-Control-Allow-Origin "https://behindy.me" always;
            add_header Access-Control-Allow-Credentials "true" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, Accept, Origin" always;
            add_header Access-Control-Expose-Headers "Content-Length, Content-Range, X-Total-Count" always;
        }
        
        # AI 서버
        location /ai/ {
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "https://behindy.me" always;
                add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
                add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
                add_header Access-Control-Allow-Credentials "true" always;
                add_header Access-Control-Max-Age "86400" always;
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }
            
            proxy_pass http://aiserver/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            add_header Access-Control-Allow-Origin "https://behindy.me" always;
            add_header Access-Control-Allow-Credentials "true" always;
        }
        
        # 정적 파일 캐싱
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
}