version: '3.8'

services:
  frontend:
    build: ./frontend
    container_name: frontend
    restart: always
    environment:
      - NEXT_PUBLIC_API_URL=/api
      - NEXT_PUBLIC_AI_URL=/ai
    networks:
      - internal
    depends_on:
      - backend
      - aiserver

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    restart: always
    expose:
      - 8080
    networks:
      - internal
    depends_on:
      - db

  aiserver:
    build: ./aiserver
    container_name: aiserver
    restart: always
    expose:
      - 8000
    networks:
      - internal

  db:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - internal

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
    networks:
      - internal

volumes:
  db-data:

networks:
  internal:
    driver: bridge