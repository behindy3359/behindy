services:
  frontend:
    build: 
      context: ./frontend
      args:
        - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
        - NEXT_PUBLIC_AI_URL=${NEXT_PUBLIC_AI_URL}
        - NEXT_PUBLIC_DEV_MODE=${NEXT_PUBLIC_DEV_MODE}
        - NEXT_PUBLIC_LOG_LEVEL=${NEXT_PUBLIC_LOG_LEVEL}
        - NEXT_PUBLIC_TOKEN_KEY=${NEXT_PUBLIC_TOKEN_KEY}
        - NEXT_PUBLIC_REFRESH_TOKEN_KEY=${NEXT_PUBLIC_REFRESH_TOKEN_KEY}
        - NEXT_PUBLIC_APP_NAME=${NEXT_PUBLIC_APP_NAME}
        - NEXT_PUBLIC_APP_VERSION=${NEXT_PUBLIC_APP_VERSION}
    container_name: frontend
    restart: always
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      - NEXT_PUBLIC_AI_URL=${NEXT_PUBLIC_AI_URL}
      - NEXT_PUBLIC_DEV_MODE=${NEXT_PUBLIC_DEV_MODE}
      - NEXT_PUBLIC_LOG_LEVEL=${NEXT_PUBLIC_LOG_LEVEL}
      - NEXT_PUBLIC_TOKEN_KEY=${NEXT_PUBLIC_TOKEN_KEY}
      - NEXT_PUBLIC_REFRESH_TOKEN_KEY=${NEXT_PUBLIC_REFRESH_TOKEN_KEY}
      - NEXT_PUBLIC_APP_NAME=${NEXT_PUBLIC_APP_NAME}
      - NEXT_PUBLIC_APP_VERSION=${NEXT_PUBLIC_APP_VERSION}
      - TZ=Asia/Seoul
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    networks:
      - internal
    depends_on:
      - backend
      - aiserver
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    restart: always
    ports:
      - "8080:8080"
    environment:
      - DB_URL=db:5432/${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
      - SPRING_DATA_REDIS_PASSWORD=${REDIS_PASSWORD}
      
      - JWT_SECRET=${JWT_SECRET}
      - FIELD_KEY=${FIELD_KEY}
      - TABLE_KEY=${TABLE_KEY}
      
      - SEOUL_METRO_API_KEY=${SEOUL_METRO_API_KEY}
      - SEOUL_METRO_API_BASE_URL=http://swopenapi.seoul.go.kr/api/subway
      - SEOUL_METRO_API_ENABLED=${METRO_API_ENABLED}
      - SEOUL_METRO_API_TIMEOUT=10000
      - SEOUL_METRO_API_RETRY_COUNT=3
      - SEOUL_METRO_API_ENABLED_LINES=${METRO_ENABLED_LINES}
      - SEOUL_METRO_CACHE_TTL=600
      - SEOUL_METRO_API_UPDATE_INTERVAL=${METRO_UPDATE_INTERVAL}
      - SEOUL_METRO_MONITORING_DAILY_LIMIT=${METRO_DAILY_LIMIT}
      - TZ=Asia/Seoul
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    networks:
      - internal
    depends_on:
      - db
      - redis
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  aiserver:
    build: ./aiserver
    container_name: aiserver
    restart: always
    expose:
      - 8000
    environment:
      - TZ=Asia/Seoul
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    networks:
      - internal
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  db:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
      TZ: Asia/Seoul
      PGTZ: Asia/Seoul
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    networks:
      - internal

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD}
    environment:
      - TZ=Asia/Seoul
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    networks:
      - internal

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    environment:
      - TZ=Asia/Seoul
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/www/certbot:/var/www/certbot:ro
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    depends_on:
      - frontend
    networks:
      - internal

volumes:
  db-data:

networks:
  internal:
    driver: bridge