/**
 * ÌôòÍ≤ΩÎ≥Ñ Î°úÍπÖ Ïú†Ìã∏Î¶¨Ìã∞
 */

const isDev = process.env.NODE_ENV === 'development';
const isTest = process.env.NODE_ENV === 'test';

export const logger = {
  /**
   * ÏùºÎ∞ò Î°úÍ∑∏ (Í∞úÎ∞ú ÌôòÍ≤Ω)
   */
  log: (...args: any[]) => {
    if (isDev) {
      console.log(...args);
    }
  },

  /**
   * Í≤ΩÍ≥† Î°úÍ∑∏ (Í∞úÎ∞ú ÌôòÍ≤Ω)
   */
  warn: (...args: any[]) => {
    if (isDev) {
      console.warn(...args);
    }
  },

  /**
   * ÏóêÎü¨ Î°úÍ∑∏ (Î™®Îì† ÌôòÍ≤Ω)
   */
  error: (...args: any[]) => {
    console.error(...args);
  },

  /**
   * ÎîîÎ≤ÑÍ∑∏ Î°úÍ∑∏ (Í∞úÎ∞ú ÌôòÍ≤Ω)
   */
  debug: (...args: any[]) => {
    if (isDev && !isTest) {
      console.debug(...args);
    }
  },

  /**
   * Ï†ïÎ≥¥ Î°úÍ∑∏ (Í∞úÎ∞ú ÌôòÍ≤Ω)
   */
  info: (...args: any[]) => {
    if (isDev) {
      console.info(...args);
    }
  },

  /**
   * ÌÖåÏù¥Î∏î Î°úÍ∑∏ (Í∞úÎ∞ú ÌôòÍ≤Ω)
   */
  table: (data: any) => {
    if (isDev) {
      console.table(data);
    }
  },

  /**
   * Í∑∏Î£π Î°úÍ∑∏ ÏãúÏûë (Í∞úÎ∞ú ÌôòÍ≤Ω)
   */
  group: (label: string) => {
    if (isDev) {
      console.group(label);
    }
  },

  /**
   * Í∑∏Î£π Î°úÍ∑∏ Ï¢ÖÎ£å (Í∞úÎ∞ú ÌôòÍ≤Ω)
   */
  groupEnd: () => {
    if (isDev) {
      console.groupEnd();
    }
  },
};

/**
 * API ÏöîÏ≤≠/ÏùëÎãµ Î°úÍπÖ Ìó¨Ìçº
 */
export const logAPI = {
  request: (method: string, url: string, data?: any) => {
    logger.group(`üåê API Request: ${method} ${url}`);
    if (data) logger.log('Data:', data);
    logger.groupEnd();
  },

  response: (url: string, status: number, data?: any) => {
    const emoji = status >= 200 && status < 300 ? '‚úÖ' : '‚ùå';
    logger.group(`${emoji} API Response: ${url} (${status})`);
    if (data) logger.log('Data:', data);
    logger.groupEnd();
  },

  error: (url: string, error: any) => {
    logger.group(`‚ùå API Error: ${url}`);
    logger.error('Error:', error);
    logger.groupEnd();
  },
};
